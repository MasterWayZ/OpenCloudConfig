define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir  %ROOT%\data
Pidfile   %ROOT%\data\nxlog.pid
SpoolDir  %ROOT%\data
LogFile   %ROOT%\data\nxlog.log

<Extension syslog>
  Module xm_syslog
</Extension>

<Extension json>
  Module  xm_json
</Extension>

<Input eventlog>
  Module im_msvistalog
  # ReadFromLast TRUE
  Query <QueryList>\
          <Query Id="0">\
            <Select Path="Microsoft-Windows-DSC/Operational">*</Select>\
            <Select Path="Application">*[System[Provider[@Name='OpenCloudConfig'] or Provider[@Name='HaltOnIdle'] or Provider[@Name='PrepLoaner']]]</Select>\
            <Select Path="Application">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="Security">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="System">*[System[Level=1 or Level=2 or Level=3 or EventID=1074]]</Select>\
            <Select Path="EC2ConfigService">*[System[Level=1 or Level=2 or Level=3]]</Select>\
            <Select Path="HardwareEvents">*[System[Level=1 or Level=2 or Level=3]]</Select>\
          </Query>\
        </QueryList>
</Input>

<Input eventlog_unfiltered>
  Module im_msvistalog
  Exec to_json();
</Input>

<Input generic_worker_log>
  Module im_file
  File 'C:\generic-worker\generic-worker.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
</Input>

<Input dsc_run_log>
  Module im_file
  File 'C:\log\*.dsc-run.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
</Input>

<Input fakemon_log>
  Module im_file
  File 'C:\log\fakemon-std*.log'
  SavePos TRUE
  ReadFromLast TRUE
  InputType LineBased
</Input>

<Processor eventlog_transform>
  Module pm_transformer
  Exec if $raw_event =~ /((No IAM role defined)|(spot termination notice not detected)|(drive z:)|(Framework Failed to launch)|(loaner semaphore not detected)|(Failed to schedule Software Protection))/ drop();
  Exec $Hostname = hostname_fqdn();
  OutputFormat syslog_rfc5424
</Processor>

<Processor generic_worker_transform>
  Module pm_transformer
  Exec if $raw_event =~ /((Deleted file - Z)|(No task claimed...)|(Zero tasks returned in Azure XML QueueMessagesList))/ drop();
  Exec $SourceName = 'generic-worker';
  Exec $Hostname = hostname_fqdn();
  OutputFormat syslog_rfc5424
</Processor>

<Processor dsc_run_transform>
  Module pm_transformer
  Exec $SourceName = 'dsc-run';
  Exec $Hostname = hostname_fqdn();
  OutputFormat syslog_rfc5424
</Processor>

<Processor fakemon_transform>
  Module pm_transformer
  Exec $SourceName = 'fakemon';
  Exec $Hostname = hostname_fqdn();
  OutputFormat syslog_rfc5424
</Processor>

<Processor eventlog_unfiltered_transform>
  Module pm_transformer
  Exec $Hostname = hostname_fqdn();
</Processor>

<Output papertrail>
  Module om_ssl
  Host logs3.papertrailapp.com
  Port 49853
  CAFile %ROOT%\cert\papertrail-bundle.pem
  AllowUntrusted FALSE
</Output>

<Output elasticsearch>
  Module om_http
  URL http://ec2-34-204-70-143.compute-1.amazonaws.com:9200
  ContentType application/json
  Exec set_http_request_path(strftime(now(), "/nxlog-%Y%m%d/" + $SourceModuleName)); rename_field("timestamp","@timestamp");
</Output>

<Route 1>
  Path eventlog => eventlog_transform => papertrail
</Route>

<Route 2>
  Path generic_worker_log => generic_worker_transform => papertrail
</Route>

<Route 3>
  Path dsc_run_log => dsc_run_transform => papertrail
</Route>

<Route 4>
  Path fakemon_log => fakemon_transform => papertrail
</Route>

<Route 5>
  Path eventlog_unfiltered => eventlog_unfiltered_transform => elasticsearch
</Route>
